 The ``3-say_my_name`` module
===================================
 usage of  3-say_my_name.py
===================================



This library has one function called ``say_my_name()``

``say_my_name()`` prints a person's first and last name

Importing the function say_my_name
	>>> say_my_name = __import__('3-say_my_name').say_my_name


Pass first_name and last_name correctly.
	>>> say_my_name("Jonathan", "Ndawula")
	My name is Jonathan Ndawula

pass first_name as none.
	>>> say_my_name(None, "Benson")
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

pass last_name as none.
	>>> say_my_name("William", None)
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string

pass first_name and last_name as none.
	>>> say_my_name(None, None)
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

pass integer as last name
	>>> say_my_name("John", 5)
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string

pass integer as first name
	>>> say_my_name(5, "Wick")
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

pass list as first or last name
	>>> say_my_name([1, 3, 5], "Clinton")
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

	>>> say_my_name("Bill", [1, 3, 5])
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string

pass dictionary as first or last name
	>>> say_my_name({ "one" : 1, "two" : 2 }, "Johnson")
	Traceback (most recent call last):
	  ...
	TypeError: first_name must be a string

	>>> say_my_name("Rock", {"one" : 1, "two" : 2})
	Traceback (most recent call last):
	  ...
	TypeError: last_name must be a string
