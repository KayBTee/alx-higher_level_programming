Matrix Division Test
======================
Use of 2-matrix_divided.py
======================

This library contains a function ``matrix_divided()``

``matrix_divided()``  divides all elements of a matrix.

How to import  matrix_divided
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

pass whole positive number as divisor
>>> matrix_divided([[6, 12, 18], [24, 30, 36]], 4)
[[1.5, 3.0, 4.5], [6.0, 7.5, 9.0]]

pass float as divisor
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

pass a negative div parameter
>>> matrix_divided([[1, 2], [3, 4]], -4)
[[-0.25, -0.5], [-0.75, -1.0]]

pass negative infinity as div
>>> matrix_divided([[2, 3], [4, 5]], float('-inf'))
[[-0.0, -0.0], [-0.0, -0.0]]

pass infinity as div
>>> matrix_divided([[2, 3], [4, 5]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

pass Zero as divisor
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

pass non-similar  types
>>> matrix_divided([["abc", "def"], [7, 8]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

pass string as div
>>> matrix_divided([[2, 4], [6, 8]], "b")
Traceback (most recent call last):
	...
TypeError: div must be a number


pass no div parameter to function
>>> matrix_divided([[3,4], [5, 6]])
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
